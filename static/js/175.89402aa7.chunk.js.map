{"version":3,"file":"static/js/175.89402aa7.chunk.js","mappings":"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","sources":["webpack://react-homework-05-movies/./src/components/MoviesSearch/MoviesSearch.module.css?9702","components/MoviesSearch/MoviesSearch.jsx","webpack://react-homework-05-movies/./src/components/MoviesItems/MoviesItems.module.css?17a0","components/MoviesItems/MoviesItems.jsx","webpack://react-homework-05-movies/./src/components/MoreMoviesButton/MoreMoviesButton.module.css?7034","components/MoreMoviesButton/MoreMoviesButton.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"MoviesSearch_searchbar__r8wBs\",\"form\":\"MoviesSearch_form__JG0bG\",\"button\":\"MoviesSearch_button__1NvzC\",\"input\":\"MoviesSearch_input__V0qlz\"};","import { useState } from 'react' ;\nimport css from 'components/MoviesSearch/MoviesSearch.module.css'\n\nconst MoviesSearch =({onSubmit})=>{\n  \n const[search, searchState]= useState('')\n console.log(search)\n  \n const onHendleSubmit = (e) => {\n   e.preventDefault(); \n   onSubmit(search);\n   searchState('')\n  }\n  \n return(\n  <header className={css.searchbar}>\n    <form className={css.form}  onSubmit={onHendleSubmit}> \n      <input\n        onChange={e => searchState(e.target.value)}\n        name=\"search\"\n        value={search}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search movies\"\n        autoFocus\n        required\n        className={css.input}\n      />\n         <button type=\"submit\" className={css.button}>\n        <span className={css.span}>Search</span>\n      </button>\n    </form>\n  </header>\n      )\n}\n\nexport default MoviesSearch\n\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"MoviesItems_items__DMrRR\",\"images\":\"MoviesItems_images__jsBNi\",\"menu\":\"MoviesItems_menu__cMrwd\",\"title\":\"MoviesItems_title__f8ThV\",\"link\":\"MoviesItems_link__RWqVM\"};","import css from 'components/MoviesItems/MoviesItems.module.css'\nimport { Link } from 'react-router-dom'\n\nconst MoviesItems = ({ movies }) => {\n\n\n   const moviesItems = movies?.map(({ id, poster_path, original_title }) =>\n      <Link to={`/movies/${id}`} key={id} className={css.link}>\n         <li key={id} className={css.items}>\n            <img className={css.images} src={poster_path ? `https://image.tmdb.org/t/p/w400${poster_path}` : `https://via.placeholder.com/400x600`} alt=\"#\" />\n            <p className={css.title}>{original_title}</p>\n         </li>\n      </Link>)\n\n   return (\n      <ul className={css.menu}>{moviesItems}</ul>\n   )\n}\nexport default MoviesItems","// extracted by mini-css-extract-plugin\nexport default {\"buttonLoadMore\":\"MoreMoviesButton_buttonLoadMore__86fPC\"};","import css from 'components/MoreMoviesButton/MoreMoviesButton.module.css'\nimport PropTypes from 'prop-types';\n\nconst MoreMoviesButton =({onClick })=>{ \n   \n  return ( \n   <button onClick={onClick} className={css.buttonLoadMore}>Load more</button> \n  )\n}\n\nMoreMoviesButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default MoreMoviesButton","import { getSearchMovies } from 'ApiGetAxios/FilmsApi'\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviesSearch from \"components/MoviesSearch/MoviesSearch\";\nimport MoviesItems from 'components/MoviesItems/MoviesItems'\nimport MoreMoviesButton from 'components/MoreMoviesButton/MoreMoviesButton'\nimport Loader from 'components/Loader/Loader';\n\n\nconst Movies = () => {\n  const [movies, stateMovies] = useState([]);\n  // const [search, searchrState] = useState('');\n  const [page, pageState] = useState(1);\n  const [totalPages, totalPagesState] = useState(1);\n  const [loading, loadingState] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query');\n \n   console.log('Комрлнент Movies', search)\n  //  console.log('Комрлнент Movies в ньому searchParams ', search)\n\n useEffect(() => {\n     if (!search) return;                 // важлива умова якщо  (!search) тобто його немає null то він не робить запит робить ретьорн коли ми щось вели і получили то робить \n     const fetchPosts = async () => {\n      try {\n        loadingState(true)\n        const results = await getSearchMovies(search, page)\n        totalPagesState(results?.total_pages)\n        stateMovies(results?.results)\n      }\n      catch (error) { console.log(error.message.error)}\n      finally {\n        loadingState(false)\n        \n      }\n    }\n    fetchPosts();\n  }, [search, page])\n\n  const searchImage = (value) => {\n    setSearchParams({query:value});\n    stateMovies([])\n    pageState(1);\n    \n  }\n\n  const loadMore = () => {\n    pageState(prevPage => prevPage + 1)\n  }\n\n  return (\n    <div>\n      <MoviesSearch onSubmit={searchImage} />\n      {loading && <Loader />}\n      \n      {movies&&<MoviesItems movies={movies} />}\n      {Boolean((page !== totalPages)) && <MoreMoviesButton onClick={loadMore} />}\n    </div>\n  )\n}\nexport default Movies\n\n\n\n\n"],"names":["onSubmit","useState","search","searchState","console","log","className","css","e","preventDefault","onChange","target","value","name","type","autoComplete","placeholder","autoFocus","required","movies","moviesItems","map","id","poster_path","original_title","to","src","alt","onClick","stateMovies","page","pageState","totalPages","totalPagesState","loading","loadingState","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchPosts","getSearchMovies","results","total_pages","message","error","query","Loader","Boolean","prevPage"],"sourceRoot":""}